syntax = "proto3";

message Unknown {}

message ActiveTileSet {}

message ActiveTileGroup {
  uint32 identifier = 1;
  repeated ActiveTileSet tileSet = 2;
  repeated string resource = 3;
  string uniqueIdentifier = 4;
  repeated Attribution attribution = 6;
  repeated RegionalResourceTile regionalResourceTile = 7;
  repeated RegionalResourceRegion regionalResourceRegion = 8;
  string regionalResourcesURLLegacy = 9;
  string searchAttributionManifestURLLegacy = 11;
  string directionsURLLegacy = 15;
  string etaURLLegacy = 16;
  string batchReverseGeocoderURLLegacy = 18;
  string releaseInfo = 19;
  string resourcesURLLegacy = 21;
  string simpleETAURLLegacy = 22;
  string addressCorrectionInitURLLegacy = 23;
  string addressCorrectionUpdateURLLegacy = 24;
  string polyLocationShiftURLLegacy = 25;
  string problemSubmissionURLLegacy = 26;
  string problemStatusURLLegacy = 27;
  string reverseGeocoderVersionsURLLegacy = 28;
  string problemCategoriesURLLegacy = 29;
  string announcementsURLLegacy = 35;
  repeated string announcementsSupportedLanguage = 36;
  // TODO incomplete
}

message RegionalResource {
  uint32 x = 1;
  uint32 y = 2;
  uint32 z = 3;
  repeated string icon = 4;
  repeated Attribution attribution = 6;
  repeated string iconChecksum = 7;
  repeated TileSetRegion tileRange = 29;
  repeated uint32 validSubManifestVersion = 30;
}
message RegionalResourceIndex {}
message RegionalResourceTile {}
message RegionalResourceRegion {}

message TileGroup {
  message VersionedTileSet {
    uint32 tileSetIndex = 1;
    uint32 identifier = 2;
  }
  uint32 identifier = 1;
  repeated VersionedTileSet tileSet = 2;
  repeated uint32 styleSheetIndex = 3 [packed = false];
  repeated uint32 textureIndex = 4 [packed = false];
  repeated uint32 fontIndex = 5 [packed = false];
  repeated uint32 iconIndex = 6 [packed = false];
  repeated RegionalResourceIndex regionalResourceIndex = 7;
  repeated uint32 xmlIndex = 8 [packed = false];
  repeated uint32 attributionIndex = 10 [packed = false];
  repeated TileSetRegion hybridUnavailableRegion = 11;
  repeated uint32 resourceIndex = 12 [packed = false];
  uint32 muninVersion = 14;
  uint32 offlineMetadataIndex = 15;
}
enum TileSetStyle {
  option allow_alias = true;
  RASTER_STANDARD = 0;
  VECTOR_STANDARD = 1;
  VECTOR_TRAFFIC_SEGMENTS_FOR_RASTER = 2;
  VECTOR_TRAFFIC_INCIDENTS_FOR_RASTER = 3;
  VECTOR_TRAFFIC_SEGMENTS_AND_INCIDENTS_FOR_RASTER = 4;
  RASTER_STANDARD_BACKGROUND = 5;
  RASTER_HYBRID = 6;
  RASTER_SATELLITE = 7;
  RASTER_TERRAIN = 8;
  VECTOR_BUILDINGS = 11;
  VECTOR_TRAFFIC = 12;
  VECTOR_POI = 13;
  SPUTNIK_METADATA = 14;
  SPUTNIK_C3M = 15;
  SPUTNIK_DSM = 16;
  SPUTNIK_DSM_GLOBAL = 17;
  VECTOR_REALISTIC = 18;
  VECTOR_LEGACY_REALISTIC = 19;
  VECTOR_ROADS = 20;
  RASTER_VEGETATION = 21;
  VECTOR_TRAFFIC_SKELETON = 22;
  RASTER_COASTLINE_MASK = 23;
  RASTER_HILLSHADE = 24;
  VECTOR_TRAFFIC_WITH_GREEN = 25;
  VECTOR_TRAFFIC_STATIC = 26;
  RASTER_COASTLINE_DROP_MASK = 27;
  VECTOR_TRAFFIC_SKELETON_WITH_HISTORICAL = 28;
  VECTOR_SPEED_PROFILES = 29;
  VECTOR_VENUES = 30;
  RASTER_DOWN_SAMPLED = 31;
  RASTER_COLOR_BALANCED = 32;
  RASTER_SATELLITE_NIGHT = 33;
  SPUTNIK_VECTOR_BORDER = 34;
  RASTER_SATELLITE_DIGITIZE = 35;
  RASTER_HILLSHADE_PARKS = 36;
  VECTOR_TRANSIT = 37;
  RASTER_STANDARD_BASE = 38;
  RASTER_STANDARD_LABELS = 39;
  RASTER_HYBRID_ROADS = 40;
  RASTER_HYBRID_LABELS = 41;
  FLYOVER_C3M_MESH = 42;
  FLYOVER_C3M_JPEG_TEXTURE = 43;
  FLYOVER_C3M_ASTC_TEXTURE = 44;
  RASTER_SATELLITE_ASTC = 45;
  RASTER_HYBRID_ROADS_AND_LABELS = 46;
  VECTOR_TRANSIT_SELECTION = 47;
  VECTOR_COVERAGE = 48;
  FLYOVER_VISIBILITY = 49;
  FLYOVER_SKYBOX = 50;
  FLYOVER_NAVGRAPH = 51;
  FLYOVER_METADATA = 52;
  VECTOR_ROAD_NETWORK = 53;
  VECTOR_LAND_COVER = 54;
  VECTOR_DEBUG = 55;
  VECTOR_STREET_POI = 56;
  MUNIN_METADATA = 57;
  VECTOR_SPR_MERCATOR = 58;
  VECTOR_SPR_MODELS = 59;
  VECTOR_SPR_MATERIALS = 60;
  VECTOR_SPR_METADATA = 61;
  VECTOR_TRACKS = 62;
  VECTOR_RESERVED_2 = 63;
  VECTOR_STREET_LANDMARKS = 64;
  COARSE_LOCATION_POLYGONS = 65;
  VECTOR_SPR_ROADS = 66;
  VECTOR_SPR_STANDARD = 67;
  VECTOR_POI_V2 = 68;
  VECTOR_POLYGON_SELECTION = 69;
  VL_METADATA = 70;
  VL_DATA = 71;
  PROACTIVE_APP_CLIP = 72;
  VECTOR_BUILDINGS_V2 = 73;
  POI_BUSYNESS = 74;
  POI_DP_BUSYNESS = 75;
  SMART_INTERFACE_SELECTION = 76;
  VECTOR_ASSETS = 77;
  SPR_ASSET_METADATA = 78;
  VECTOR_SPR_POLAR = 79;
  SMART_DATA_MODE = 80;
  CELLULAR_PERFORMANCE_SCORE = 81;
  VECTOR_SPR_MODELS_OCCLUSION = 82;
  VECTOR_TOPOGRAPHIC = 83;
  VECTOR_POI_V2_UPDATE = 84;
  VECTOR_LIVE_DATA_UPDATES = 85;
  VECTOR_TRAFFIC_V2 = 86;
  VECTOR_ROAD_SELECTION = 87;
  VECTOR_REGION_METADATA = 88;
  RAY_TRACING = 89;
  VECTOR_CONTOURS = 90;
  UNUSED_91 = 91;
  UNUSED_92 = 92;
  UNUSED_93 = 93;
  UNUSED_94 = 94;
  UNUSED_95 = 95;
  UNUSED_96 = 96;
  UNUSED_97 = 97;
  UNUSED_98 = 98;
  UNUSED_99 = 99;
  DAVINCI_DEV1 = 58;
  DAVINCI_DEV2 = 59;
  DAVINCI_DEV3 = 60;
  DAVINCI_DEV4 = 61;
  DAVINCI_DEV6 = 63;
  DAVINCI_DEV7 = 66;
  DAVINCI_DEV8 = 67;
  DAVINCI_DEV9 = 68;
  DAVINCI_BUILDINGS = 73;
  VECTOR_RESERVED_1 = 62;
}

enum TileScale {
  NODPI = 0;
  LODPI = 1;
  HIDPI = 2;
}

enum TileSize {
  PX128 = 0;
  PX256 = 1;
  PX512 = 2;
}

enum GenericTileType {
  UNKNOWN = 0;
  WATER = 1;
  NO_TILE = 2;
}

message GenericTile {
  GenericTileType tileType = 1;
  uint32 textureIndex = 2;
  uint32 resourceIndex = 3;
}

message TileSetRegion {
  uint32 minX = 1;
  uint32 minY = 2;
  uint32 maxX = 3;
  uint32 maxY = 4;
  uint32 minZ = 5;
  uint32 maxZ = 6;
}

message TileSetVersion {
  uint32 identifier = 1;
  repeated TileSetRegion availableTiles = 2;
  optional uint32 timeToLiveSeconds = 3;
  repeated GenericTile genericTile = 4;
  optional uint32 supportedLanguagesVersion = 5;
}

message TileSet {
  optional string baseURL = 1;
  optional string multiTileURL = 2;
  TileSetStyle style = 3;
  repeated TileSetVersion validVersion = 5;
  TileScale scale = 6;
  TileSize size = 7;
  optional string localizationURL = 9;
  repeated Language supportedLanguage = 10;
  optional bool multiTileURLUsesStatusCodes = 11;
  optional TileSetVersionUpdateBehavior updateBehavior = 12;
  repeated CountryRegionTuple countryRegionWhitelist = 13;
  TileSetChecksumType checksumType = 14;
  optional uint32 dataSet = 15;
  TileRequestStyle requestStyle = 16;
  optional bool useAuthProxy = 17;
  optional bool supportsMultipathTCP = 18;
  optional uint32 alternativeMultipathTCPPort = 19;
  repeated string deviceSKUWhitelist = 20;

  message Language {
    uint32 identifier = 1;
    repeated string language = 2;
  }
 
  enum TileSetVersionUpdateBehavior {
    TILE_UPDATE_BEHAVIOR_FLUSH = 0;
    TILE_UPDATE_BEHAVIOR_ETAG = 1;
  }
 
  message CountryRegionTuple {
    string countryCode = 1;
    string region = 2;
  }
  
  enum TileSetChecksumType {
    CHECKSUM_TYPE_NONE = 0;
    CHECKSUM_TYPE_APPENDED_MD5 = 1;
  }

  enum TileRequestStyle {
    REQUEST_STYLE_LEGACY = 0;
    REQUEST_STYLE_HEADER_PARAMS_VERSION_BASED_HMAC_AUTH = 1;
  }
}

message ResourceFilter {
  enum Scale {
    RESOURCE_FILTER_SCALE_UNKNOWN = 0;
    RESOURCE_FILTER_SCALE_1X = 1;
    RESOURCE_FILTER_SCALE_2X = 2;
    RESOURCE_FILTER_SCALE_3X = 3;
  }
  enum Scenario {
    RESOURCE_FILTER_SCENARIO_UNKNOWN = 0;
    RESOURCE_FILTER_SCENARIO_CARPLAY = 1;
    RESOURCE_FILTER_SCENARIO_NAVIGATION = 2;
    RESOURCE_FILTER_SCENARIO_HIGHVISIBILITY = 3;
    RESOURCE_FILTER_SCENARIO_EXPLICIT = 4;
  }
  repeated Scale scale = 1;
  repeated Scenario scenario = 2;
}

message Resource {
  enum ResourceType {
    RESOURCE_TYPE_STYLESHEET = 0;
    RESOURCE_TYPE_TEXTURE = 1;
    RESOURCE_TYPE_FONT = 2;
    RESOURCE_TYPE_ICON = 3;
    RESOURCE_TYPE_XML = 4;
    RESOURCE_TYPE_ATTRIBUTION_LOGO = 5;
    RESOURCE_TYPE_ATTRIBUTION_BADGE = 6;
    RESOURCE_TYPE_OTHER = 7;
  }
  enum ConnectionType {
    RESOURCE_DOWNLOAD_CONNECTION_TYPE_UNKNOWN = 0;
    RESOURCE_DOWNLOAD_CONNECTION_TYPE_CELLULAR = 1;
    RESOURCE_DOWNLOAD_CONNECTION_TYPE_PREFER_WIFI = 2;
    RESOURCE_DOWNLOAD_CONNECTION_TYPE_WIFI_ONLY = 3;
  }
  enum ValidationMethod {
    SHA1 = 0;
    CMS = 1;
  }
  enum UpdateMethod {
    VERSIONED = 0;
    ETAG = 1;
  }
  ResourceType resourceType = 1;
  string filename = 2;
  bytes checksum = 3;
  repeated TileSetRegion region = 4;
  repeated ResourceFilter filter = 5;
  optional ConnectionType connectionType = 6;
  optional uint32 preferWiFiAllowedStaleThreshold = 7;
  ValidationMethod validationMethod = 8;
  optional uint32 alternateResourceURLIndex = 9;
  UpdateMethod updateMethod = 10;
  optional uint32 timeToLiveSeconds = 11;
}

message Attribution {
  optional string badge = 1;
  optional string logo = 2;
  string name = 3;
  string url = 4;
  optional string badgeChecksum = 5;
  optional string logoChecksum = 6;
  repeated Resource resource = 7;
  repeated TileSetRegion region = 8;
  optional uint32 dataSet = 9;
  uint32 linkDisplayStringIndex = 10;
  optional string plainTextURL = 11;
  optional bytes plainTextURLSHA256Checksum = 12;
}

message ServiceVersion {
  repeated string versionDomain = 1;
  uint32 minimumVersion = 2;
}

message VersionManifest { repeated ServiceVersion serviceVersion = 1; }

message DataSetDescription {
  uint32 identifier = 1;
  string dataSetDescription = 2;
}
message DataSetURLOverride {}
message MuninVersion {}
message URLInfo {
  string url = 1;
  optional bool useAuthProxy = 2;
  bool supportsMultipathTCP = 3;
  optional uint32 alternativeMultipathTCPPort = 4;
}
message URLInfoSet {
  optional uint32 dataSet = 1;
  optional URLInfo resourcesURL = 2;
  optional URLInfo searchAttributionManifestURL = 3;
  optional URLInfo directionsURL = 4;
  optional URLInfo etaURL = 5;
  optional URLInfo batchReverseGeocoderURL = 6;
  optional URLInfo simpleETAURL = 7;
  optional URLInfo addressCorrectionInitURL = 8;
  optional URLInfo addressCorrectionUpdateURL = 9;
  optional URLInfo polyLocationShiftURL = 10;
  optional URLInfo problemSubmissionURL = 11;
  optional URLInfo problemStatusURL = 12;
  optional URLInfo reverseGeocoderVersionsURL = 13;
  optional URLInfo problemCategoriesURL = 14;
  optional URLInfo announcementsURL = 15;
  optional URLInfo dispatcherURL = 16;
  optional URLInfo problemOptInURL = 17;
  optional URLInfo abExperimentURL = 18;
  optional URLInfo businessPortalBaseURL = 19;
  optional URLInfo logMessageUsageURL = 20;
  optional URLInfo spatialLookupURL = 21;
  optional URLInfo realtimeTrafficProbeURL = 22;
  optional URLInfo batchTrafficProbeURL = 23;
  optional URLInfo proactiveRoutingURL = 24;
  optional URLInfo logMessageUsageV3URL = 25;
  optional URLInfo backgroundDispatcherURL = 26;
  optional URLInfo bluePOIDispatcherURL = 27;
  optional URLInfo backgroundRevGeoURL = 28;
  optional URLInfo wifiConnectionQualityProbeURL = 29;
  optional URLInfo muninBaseURL = 30;
  optional URLInfo authProxyURL = 31;
  optional URLInfo wifiQualityURL = 32;
  optional URLInfo feedbackSubmissionURL = 33;
  optional URLInfo feedbackLookupURL = 34;
  optional URLInfo junctionImageServiceURL = 35;
  optional URLInfo analyticsCohortSessionURL = 36;
  optional URLInfo analyticsLongSessionURL = 37;
  optional URLInfo analyticsShortSessionURL = 38;
  optional URLInfo analyticsSessionlessURL = 39;
  optional URLInfo webModuleBaseURL = 40;
  optional URLInfo wifiQualityTileURL = 41;
  repeated URLInfo alternateResourcesURL = 42;
  optional URLInfo tokenAuthenticationURL = 43;
  optional URLInfo authenticatedClientFeatureFlagURL = 44;
  optional URLInfo addressCorrectionTaggedLocationURL = 45;
  optional URLInfo proactiveAppClipURL = 46;
  optional URLInfo enrichmentSubmissionURL = 47;
  optional URLInfo ugcLogDiscardURL = 48;
  optional URLInfo batchReverseGeocoderPlaceRequestURL = 49;
  optional URLInfo pressureProbeDataURL = 50;
  optional URLInfo poiBusynessActivityCollectionURL = 51;
  optional URLInfo rapWebBundleURL = 52;
  optional URLInfo networkSelectionHarvestURL = 53;
  optional URLInfo offlineDataBatchListURL = 54;
  optional URLInfo offlineDataSizeURL = 55;
  optional URLInfo offlineDataDownloadBaseURL = 56;
  optional URLInfo bcxDispatcherURL = 57;
}
message MuninBucket {
  uint32 bucketID = 3;
  string bucketURL = 4;
  optional uint32 lodLevel = 5;
}
message DisplayString { repeated LocalizedString localizedString = 1; }
message LocalizedString {
  string locale = 1;
  string stringValue = 3;
}
message MapRegion {}
message OfflineMetadata {
  uint64 dataVersion = 1;
  uint32 regulatoryRegionId = 2;
}

message Resources {
  repeated TileGroup tileGroup = 1;
  repeated TileSet tileSet = 2;
  repeated string styleSheet = 3;
  repeated string texture = 4;
  repeated string font = 5;
  repeated string icon = 6;
  repeated RegionalResource regionalResource = 8;
  repeated string xml = 9;
  repeated Attribution attribution = 11;
  string authToken = 30;
  optional string resourcesURL = 31;
  optional string searchURL = 32;
  optional string searchAttributionManifestURL = 33;
  optional string autocompleteURL = 34;
  optional string reverseGeocoderURL = 35;
  optional string forwardGeocoderURL = 36;
  optional string directionsURL = 37;
  optional string etaURL = 38;
  optional string locationShiftURL = 39;
  string releaseInfo = 40;
  optional string batchReverseGeocoderURL = 41;
  optional string mapMatchURL = 42;
  optional string simpleETAURL = 43;
  repeated string styleSheetChecksum = 44;
  repeated string textureChecksum = 45;
  repeated string fontChecksum = 46;
  repeated string iconChecksum = 47;
  repeated string xmlChecksum = 48;
  optional string addressCorrectionInitURL = 49;
  optional string addressCorrectionUpdateURL = 50;
  optional string polyLocationShiftURL = 51;
  optional string problemSubmissionURL = 52;
  optional string problemStatusURL = 53;
  optional string reverseGeocoderVersionsURL = 54;
  optional string problemCategoriesURL = 55;
  optional string usageURL = 56;
  optional string businessCallerIDURL = 58;
  optional string problemNotificationAvailabilityURL = 59;
  optional string announcementsURL = 61;
  repeated string announcementsSupportedLanguage = 62;
  optional string businessNameResolutionURL = 63;
  optional string dispatcherURL = 64;
  optional string problemOptInURL = 65;
  VersionManifest versionManifest = 66;
  optional string abExperimentURL = 67;
  optional string businessPortalBaseURL = 68;
  optional string logMessageUsageURL = 69;
  repeated MapRegion locationShiftEnabledRegion = 70;
  optional uint32 locationShiftVersion = 71;
  repeated Resource resource = 72;
  optional string spatialLookupURL = 73;
  repeated DataSetDescription dataSet = 74;
  repeated DataSetURLOverride dataSetURLOverride = 75;
  optional string realtimeTrafficProbeURL = 77;
  optional string batchTrafficProbeURL = 78;
  optional string proactiveRoutingURL = 79;
  optional string logMessageUsageV3URL = 80;
  optional string backgroundDispatcherURL = 81;
  optional string bluePOIDispatcherURL = 82;
  optional string backgroundRevGeoURL = 83;
  optional string wifiConnectionQualityProbeURL = 85;
  optional string muninBaseURL = 88;
  repeated MuninVersion muninVersion = 89;
  optional string authProxyURL = 91;
  repeated URLInfoSet urlInfoSet = 92;
  repeated MuninBucket muninBucket = 93;
  repeated DisplayString displayString = 94;
  repeated OfflineMetadata offlineMetadata = 95;
}

message ResourceManifestDownload {
  Resources resources = 1;
  // DownloadMetadata metadata = 2;
}

message SessionID {
  uint64 high = 1;
  uint64 low = 2;
}

message GeoServiceTag {
  enum ServiceType {
    SERVICE_UNKNOWN = 0;
    REV_GEO = 1;
    FWD_GEO = 2;
    SEARCH = 3;
    ROUTING = 4;
    LOCATION_SERVICE = 5;
    COLLECTION = 6;
    CELL_WIFI_HARVEST = 7;
    TRACE_HARVEST = 8;
    TRAFFIC_TILES = 9;
    RASTER = 10;
    AUTO_COMPLETE = 0xb;
    DASHBOARD_TEST = 0xc;
    VECTOR = 0xd;
    ADDR_PTS_HARVEST = 0xe;
    DISPATCHER = 0xf;
    PLACE_LOOKUP = 0x10;
    PARSEC = 0x11;
    GEO_SERVICES_FRAMEWORK = 0x12;
    SIRI = 0x13;
    MERCHANT_LOOKUP = 0x14;
    GEO_SEARCH = 0x15;
    TRAFFIC_ETA = 0x16;
    COMMUNITY = 0x17;
    LOCUS = 0x18;
    AUTONAVI_FRONTDOOR = 0x19;
  }
  ServiceType serviceType = 1;
  string tag = 2;
}

message LocalTime {}
message AbAssignInfo {}

message PDAnalyticMetadata {
  string appIdentifier = 1;
  string appMajorVersion = 2;
  string appMinorVersion = 3;
  string hardwareModel = 4;
  string osVersion = 5;
  int32 isInternalTool = 6;
  int32 isInternalInstall = 7;
  SessionID sessionId = 8;
  uint32 sequenceNumber = 9;
  int32 requestSource = 10;
  int32 isFromApi = 0xc;
  repeated GeoServiceTag serviceTag = 0xd;
  string productName = 0xe;
  string loggedAbExperiment = 0xf;
  AbAssignInfo abAssignInfo = 0x10;
  LocalTime requestTime = 0x11;
  double relativeTimestamp = 0x12;
  int32 isSiriOriginalRequest = 0x13;
}

message AdditionalEnabledMarkets {}
message Location {}
message LocalizationCapabilities {}
message ABExperimentAssignment {}
message ABClientConfig {}
message ABClientDatasetMetadata {
  uint32 bucketId = 1;
  uint32 datasetId = 2;
}
message ABSecondPartyPlaceRequestClientMetaData {
  repeated ABExperimentAssignment serverAbAssignment = 1;
  repeated ABClientConfig clientConfig = 2;
  ABClientDatasetMetadata clientDatasetMetadata = 5;
}

message PDClientMetadata {
  string deviceCountryCode = 1;
  string deviceDisplayLanguage = 3;
  string deviceKeyboardLanguage = 4;
  string deviceSpokenLanguage = 5;
  uint32 timeSinceMapEnteredForeground = 8;
  AdditionalEnabledMarkets additionalEnabledMarkets = 9;
  int32 resultListAttributionSupport = 10;
  uint32 hourOfDay = 11;
  uint32 dayOfWeek = 12;
  Location deviceExtendedLocation = 13;
  repeated Location deviceHistoricalLocation = 15;
  int32 requiredVersion = 16;
  string debugApiKey = 17;
  repeated int32 knownClientResolvedTypeDeprecated = 18;
  bool enablePreflightVenues = 19;
  repeated int32 knownClientResolvedType = 20;
  repeated string businessChatPreflightIdentifier = 21;
  int32 clientRevision = 22;
  LocalizationCapabilities localizationCapabilities = 23;
  string deviceSku = 24;
  bool siriUserConsentsForAnalysis = 25;
  repeated int32 supportedMapsResultType = 26;
  ABSecondPartyPlaceRequestClientMetaData abClientMetadata = 100;
}

message PDTimeRange {
  uint32 startTime = 1;
  uint32 duration = 2;
}
message PDDeparturePredicate {
  PDTimeRange timeRange = 1;
  uint32 numAdditionalDepartures = 2;
}
message PDPhotoSizeFilterValue {
  uint32 width = 1;
  uint32 height = 2;
}
message PDDepartureSequence {}

message PDEntityFilter {}
message PDPlaceInfoFilter {}
message PDRoadAccessInfoFilter {}
message PDBoundsFilter {}
message PDAddressFilter {}
message PDRatingFilter {}
message PDReviewFilter {
  repeated PDPhotoSizeFilterValue photoSizeFilter = 1;
  bool suppressSyntheticReviews = 2;
}
message PDPhotoFilter {}
message PDHoursFilter {}
message PDTransitInfoFilter {}
message PDTransitScheduleFilter {
  PDDeparturePredicate departurePredicateCountdown = 5;
  PDDeparturePredicate departurePredicateStamp = 6;
  PDTimeRange operatingHoursRange = 7;
  int32 includeRealTimeDepartures = 8;
}
message PDETAFilter {}
message PDFlyoverFilter {}
message PDRawAttributeFilter {}
message PDAmenitiesFilter {}
message PDStyleAttributesFilter {}
message PDTransitIncidentFilter {}
message PDTextBlockFilter {}
message PDFactoidFilter {}
message PDTransitAttributionFilter {}
message PDBusinessClaimFilter {}
message PDCaptionedPhotoFilter {}
message PDTransitInfoSnippetFilter {}
message PDExternalActionFilter {}
message PDResultSnippetFilter {}
message PDAddressObjectFilter {}
message PDSimpleRestaurantMenuTextFilter {}
message PDRestaurantReservationLinkFilter {}
message PDSpatialLookupFilter {}
message PDTipFilter {}
message PDPlacecardURLFilter {}
message PDAssociatedAppFilter {}
message PDMessageLinkFilter {}
message PDQuickLinkFilter {}
message PDRapFilter {}
message PDLocationEventFilter {}
message PDVenueInfoFilter {}
message PDContainedPlaceFilter {}
message PDWifiFingerprintFilter {}
message PDIconFilter {}
message PDPriceDescriptionFilter {}
message PDBrowseCategoriesFilter {}
message PDStorefrontFilter {}
message PDGroundViewLabelFilter {}
message PDAnnotatedItemListFilter {}
message PDPoiEventFilter {}
message PDStorefrontPresentationFilter {}
message PDPlacecardLayoutConfigurationFilter {}
message PDPrototypeContainerFilter {}
message PDVehiclePositionFilter {}
message PDLinkedServiceFilter {}
message PDBusinessHoursFilter {}
message PDPlaceCollectionFilter {}
message PDRelatedPlaceFilter {}
message PDTransitTripStopFilter {}
message PDTransitTripStopTimeFilter {}
message PDTransitTripGeometryFilter {}
message PDWalletCategoryInformationFilter {}
message PDPublisherFilter {}
message PDPlaceQuestionnaireFilter {}
message PDPlaceCollectionItemFilter {}
message PDCollectionIdsFilter {}

message PDComponentFilter {
  PDEntityFilter entityFilter = 1;
  PDPlaceInfoFilter placeInfoFilter = 2;
  PDRoadAccessInfoFilter accessInfoFilter = 3;
  PDBoundsFilter boundsFilter = 4;
  PDAddressFilter addressFilter = 5;
  PDRatingFilter ratingFilter = 6;
  PDReviewFilter reviewFilter = 7;
  PDPhotoFilter photoFilter = 8;
  PDHoursFilter hoursFilter = 9;
  PDTransitInfoFilter transitInfoFilter = 10;
  PDTransitScheduleFilter transitScheduleFilter = 0xb;
  PDETAFilter etaFilter = 0xc;
  PDFlyoverFilter flyoverFilter = 0xd;
  PDRawAttributeFilter rawAttributeFilter = 0xe;
  PDAmenitiesFilter amenitiesFilter = 0xf;
  PDStyleAttributesFilter styleAttributesFilter = 0x10;
  PDTransitIncidentFilter transitIncidentFilter = 0x14;
  PDTextBlockFilter textBlockFilter = 0x16;
  PDFactoidFilter factoidFilter = 0x17;
  PDTransitAttributionFilter transitAttributionFilter = 0x18;
  PDBusinessClaimFilter businessClaimFilter = 0x19;
  PDCaptionedPhotoFilter captionedPhotoFilter = 0x1a;
  PDTransitInfoSnippetFilter transitInfoSnippetFilter = 0x1b;
  PDExternalActionFilter externalActionFilter = 0x1d;
  PDResultSnippetFilter resultSnippetFilter = 0x1e;
  PDAddressObjectFilter addressObjectFilter = 0x1f;
  PDSimpleRestaurantMenuTextFilter simpleRestaurantMenuTextFilter = 0x20;
  PDRestaurantReservationLinkFilter restaurantReservationLinkFilter = 0x21;
  PDSpatialLookupFilter spatialLookupFilter = 0x22;
  PDTipFilter tipFilter = 0x24;
  PDPlacecardURLFilter placecardUrlFilter = 0x25;
  PDAssociatedAppFilter associatedAppFilter = 0x26;
  PDMessageLinkFilter messageLinkFilter = 0x27;
  PDQuickLinkFilter quickLinkFilter = 0x28;
  PDRapFilter rapFilter = 0x29;
  PDLocationEventFilter locationEventFilter = 0x2b;
  PDVenueInfoFilter venueInfoFilter = 0x30;
  PDContainedPlaceFilter containedPlaceFilter = 0x32;
  PDWifiFingerprintFilter wifiFingerprintFilter = 0x33;
  PDIconFilter iconFilter = 0x34;
  PDPriceDescriptionFilter priceDescriptionFilter = 0x35;
  PDBrowseCategoriesFilter browseCategoriesFilter = 0x36;
  PDStorefrontFilter storefrontFilter = 0x37;
  PDGroundViewLabelFilter groundViewLabelFilter = 0x38;
  PDAnnotatedItemListFilter annotatedItemListFilter = 0x39;
  PDPoiEventFilter poiEventFilter = 0x3a;
  PDStorefrontPresentationFilter storefrontPresentationFilter = 0x3b;
  PDPlacecardLayoutConfigurationFilter placecardLayoutConfigurationFilter =
      0x3c;
  PDPrototypeContainerFilter protoTypeContainerFilter = 0x3d;
  PDVehiclePositionFilter transitVehiclePositionFilter = 0x3e;
  PDLinkedServiceFilter linkedServiceFilter = 0x3f;
  PDBusinessHoursFilter businessHoursFilter = 0x40;
  PDPlaceCollectionFilter placeCollectionFilter = 0x41;
  PDRelatedPlaceFilter relatedPlaceFilter = 0x42;
  PDTransitTripStopFilter transitTripStopFilter = 0x43;
  PDTransitTripStopTimeFilter transitTripStopTimeFilter = 0x44;
  PDTransitTripGeometryFilter transitTripGeometryFilter = 0x45;
  PDWalletCategoryInformationFilter walletCategoryInformationFilter = 0x46;
  PDPublisherFilter publisherFilter = 0x47;
  PDPlaceQuestionnaireFilter placeQuestionnaireFilter = 0x49;
  PDPlaceCollectionItemFilter placeCollectionItemFilter = 0x4a;
  PDCollectionIdsFilter collectionIdsFilter = 0x4c;
}

message PDComponentInfo {
  enum ComponentType {
    COMPONENT_TYPE_UNKNOWN = 0;
    COMPONENT_TYPE_ENTITY = 1;
    COMPONENT_TYPE_PLACE_INFO = 2;
    COMPONENT_TYPE_ROAD_ACCESS_INFO = 3;
    COMPONENT_TYPE_BOUNDS = 4;
    COMPONENT_TYPE_ADDRESS = 5;
    COMPONENT_TYPE_RATING = 6;
    COMPONENT_TYPE_REVIEW = 7;
    COMPONENT_TYPE_PHOTO = 8;
    COMPONENT_TYPE_HOURS = 9;
    COMPONENT_TYPE_TRANSIT_INFO = 10;
    COMPONENT_TYPE_TRANSIT_SCHEDULE = 0xb;
    COMPONENT_TYPE_ETA = 0xc;
    COMPONENT_TYPE_FLYOVER = 0xd;
    COMPONENT_TYPE_RAW_ATTRIBUTE = 0xe;
    COMPONENT_TYPE_AMENITIES = 0xf;
    COMPONENT_TYPE_STYLE_ATTRIBUTES = 0x10;
    COMPONENT_TYPE_TRANSIT_INCIDENT = 0x14;
    COMPONENT_TYPE_TEXT_BLOCK = 0x16;
    COMPONENT_TYPE_FACTOID = 0x17;
    COMPONENT_TYPE_TRANSIT_ATTRIBUTION = 0x18;
    COMPONENT_TYPE_BUSINESS_CLAIM = 0x19;
    COMPONENT_TYPE_CAPTIONED_PHOTO = 0x1a;
    COMPONENT_TYPE_TRANSIT_INFO_SNIPPET = 0x1b;
    COMPONENT_TYPE_EXTERNAL_ACTION = 0x1d;
    COMPONENT_TYPE_RESULT_SNIPPET = 0x1e;
    COMPONENT_TYPE_ADDRESS_OBJECT = 0x1f;
    COMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXT = 0x20;
    COMPONENT_TYPE_RESTAURANT_RESERVATION_LINK = 0x21;
    COMPONENT_TYPE_SPATIAL_LOOKUP_RESULT = 0x22;
    COMPONENT_TYPE_TIP = 0x24;
    COMPONENT_TYPE_PLACECARD_URL = 0x25;
    COMPONENT_TYPE_ASSOCIATED_APP = 0x26;
    COMPONENT_TYPE_MESSAGE_LINK = 0x27;
    COMPONENT_TYPE_QUICK_LINK = 0x28;
    COMPONENT_TYPE_RAP = 0x29;
    COMPONENT_TYPE_OFFLINE_AREA = 0x2a;
    COMPONENT_TYPE_LOCATION_EVENT = 0x2b;
    COMPONENT_TYPE_SUPPORTS_OFFLINE_MAPS = 0x2c;
    COMPONENT_TYPE_OFFLINE_IDENTIFIER = 0x2d;
    COMPONENT_TYPE_OFFLINE_QUAD_NODES = 0x2e;
    COMPONENT_TYPE_OFFLINE_SIZE = 0x2f;
    COMPONENT_TYPE_VENUE_INFO = 0x30;
    COMPONENT_TYPE_OFFLINE_UPDATE_MANIFEST = 0x31;
    COMPONENT_TYPE_CONTAINED_PLACE = 0x32;
    COMPONENT_TYPE_WIFI_FINGERPRINT = 0x33;
    COMPONENT_TYPE_ICON = 0x34;
    COMPONENT_TYPE_PRICE_DESCRIPTION = 0x35;
    COMPONENT_TYPE_BROWSE_CATEGORIES = 0x36;
    COMPONENT_TYPE_STOREFRONT = 0x37;
    COMPONENT_TYPE_GROUND_VIEW_LABEL = 0x38;
    COMPONENT_TYPE_ANNOTATED_ITEM_LIST = 0x39;
    COMPONENT_TYPE_POI_EVENT = 0x3a;
    COMPONENT_TYPE_STOREFRONT_PRESENTATION = 0x3b;
    COMPONENT_TYPE_PLACECARD_LAYOUT = 0x3c;
    COMPONENT_TYPE_PROTOTYPE_CONTAINER = 0x3d;
    COMPONENT_TYPE_TRANSIT_VEHICLE_POSITION = 0x3e;
    COMPONENT_TYPE_LINKED_SERVICE = 0x3f;
    COMPONENT_TYPE_BUSINESS_HOURS = 0x40;
    COMPONENT_TYPE_COLLECTION = 0x41;
    COMPONENT_TYPE_RELATED_PLACE = 0x42;
    COMPONENT_TYPE_TRANSIT_TRIP_STOP = 0x43;
    COMPONENT_TYPE_TRANSIT_TRIP_STOP_TIME = 0x44;
    COMPONENT_TYPE_TRANSIT_TRIP_GEOMETRY = 0x45;
    COMPONENT_TYPE_PLACE_BROWSE_CATEGORIES = 0x46;
    COMPONENT_TYPE_PUBLISHER = 0x47;
    COMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIES = 0x48;
    COMPONENT_TYPE_PLACE_QUESTIONNAIRE = 0x49;
    COMPONENT_TYPE_PLACE_COLLECTION_ITEM = 0x4a;
    COMPONENT_TYPE_COLLECTION_IDS = 0x4c;
  }
  ComponentType type = 1;
  uint32 startIndex = 2;
  uint32 count = 3;
  PDComponentFilter filter = 5;
  int32 includeSource = 6;
  int32 urgency = 7;
}

message PDPlaceRequestParameters {}

message PDPlaceRequest {
  enum RequestType {
    REQUEST_TYPE_UNKNOWN = 0;
    REQUEST_TYPE_SEARCH = 1;
    REQUEST_TYPE_GEOCODING = 2;
    REQUEST_TYPE_CANONICAL_LOCATION_SEARCH = 3;
    REQUEST_TYPE_REVERSE_GEOCODING = 4;
    REQUEST_TYPE_PLACE_LOOKUP = 5;
    REQUEST_TYPE_MERCHANT_LOOKUP = 6;
    REQUEST_TYPE_PLACE_REFINEMENT = 7;
    REQUEST_TYPE_SIRI_SEARCH = 8;
    REQUEST_TYPE_LOCATION_DIRECTED_SEARCH = 9;
    REQUEST_TYPE_AUTOCOMPLETE = 10;
    REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTION = 0xb;
    REQUEST_TYPE_CATEGORY_SEARCH = 0xc;
    REQUEST_TYPE_POPULAR_NEARBY_SEARCH = 0xd;
    REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTION = 0xe;
    REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDER = 0xf;
    REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCH = 0x10;
    REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENT = 0x11;
    REQUEST_TYPE_NEARBY_SEARCH = 0x12;
    REQUEST_TYPE_ADDRESS_OBJECT_GEOCODING = 0x13;
    REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION = 0x14;
    REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUP = 0x15;
    REQUEST_TYPE_FEATURE_ID_GEOCODING = 0x16;
    REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUP = 0x17;
    REQUEST_TYPE_DATASET_STATUS_CHECK = 0x18;
    REQUEST_TYPE_OFFLINE_AREA_LOOKUP = 0x19;
    REQUEST_TYPE_CLUSTER_GEOCODING = 0x1a;
    REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONS = 0x1b;
    REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODES = 0x1c;
    REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONS = 0x1d;
    REQUEST_TYPE_BRAND_LOOKUP = 0x1e;
    REQUEST_TYPE_OFFLINE_UPDATE_MANIFEST = 0x1f;
    REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUP = 0x20;
    REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTION = 0x21;
    REQUEST_TYPE_IP_GEO_LOOKUP = 0x22;
    REQUEST_TYPE_GROUND_VIEW_LABEL = 0x23;
    REQUEST_TYPE_BATCH_SPATIAL_LOOKUP = 0x24;
    REQUEST_TYPE_TRANSIT_VEHICLE_POSITION = 0x25;
    REQUEST_TYPE_PLACE_COLLECTION_LOOKUP = 0x26;
    REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUP = 0x27;
    REQUEST_TYPE_BATCH_CATEGORY_LOOKUP = 0x28;
    REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRAND = 0x29;
    REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORY = 0x2a;
    REQUEST_TYPE_COLLECTION_SUGGESTION = 0x2b;
    REQUEST_TYPE_MAPS_SEARCH_HOME = 0x2c;
    REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUP = 0x2d;
    REQUEST_TYPE_PUBLISHER_VIEW = 0x2e;
    REQUEST_TYPE_ALL_COLLECTIONS_VIEW = 0x2f;
    REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUP = 0x30;
  }

  PDAnalyticMetadata analyticMetadata = 1;
  PDClientMetadata clientMetadata = 2;
  repeated string displayLanguage = 3;
  repeated string spokenLanguage = 4;
  repeated PDComponentInfo requestedComponent = 5;
  int32 suppressResultsRequiringAttribution = 6;
  RequestType requestType = 7;
  PDPlaceRequestParameters placeRequestParameters = 8;
  string displayRegion = 9;
}

message LogMsgEventUserAction {}
message LogMsgEventStateTiming {}
message LogMsgEventTileSetState {}
message LogMsgEventPlaceDataCache {}
message LogMsgEventNetwork {}
message LogMsgEventDirections {}
message LogMsgEventTransitAppLaunch {}
message LogMsgEventTimeToLeaveHypothesis {}
message LogMsgEventTimeToLeaveInitialTravelTime {}
message LogMsgEventLogFramework {}
message LogMsgEventMapsWidgetsInteractionSession {}
message LogMsgEventListInteractionSession {}
message LogMsgEventRefineSearchSession {}
message LogMsgEventProactiveSuggestionInteractionSession {}
message LogMsgEventMapLaunch {}
message LogMsgEventRideBookingSession {}
message LogMsgEventRideBookedSession {}
message LogMsgEventTableBookingSession {}
message LogMsgEventTableBookedSession {}
message LogMsgEventFullNavTrace {}
message LogMsgEventTelemetric {}
message LogMsgEventClientACSuggestions {}
message LogMsgEventRealtimeTrafficProbe {}
message LogMsgEventBatchTrafficProbe {}
message LogMsgEventCommuteWindow {}
message LogMsgEventGenericAppError {}
message LogMsgEventWifiConnectionQualityProbe {}
message LogMsgEventParkedCar {}
message LogMsgEventTileCacheAnalytic {}
message LogMsgEventGridDuration {}
message LogMsgEventDisplayAnalytic {}
message LogMsgEventThrottle {}
message LogMsgEventMapKitCounts {}
message LogMsgEventPredExTrainingData {}
message LogMsgEventMarcoLiteUsage {}
message LogMsgEventTripDepartureFeedback {}
message LogMsgEventDirectionsRequestDetails {}
message LogMsgEventEVRoutingVehicleDetails {}
message LogMsgEventEVTrip {}
message LogMsgEventCuratedCollectionStats {}
message LogMsgEventCuratedCollectionUsage {}
message LogMsgEventMapsDeviceSettings {}
message LogMsgEventHardStop {}
message LogMsgEventVLFUsage {}

message LogMsgEventId {}
message LogMsgState {
  enum StateType {
    LOG_MSG_STATE_TYPE_UNKNOWN = 0;
    DEVICE_IDENTIFIER = 0xc9;
    APPLICATION_IDENTIFIER = 0x12d;
    DEVICE_BASE = 0x191;
    DEVICE_LOCALE = 0x192;
    DEVICE_CONNECTION = 0x193;
    CAR_PLAY = 0x194;
    PAIRED_DEVICE = 0x195;
    EXTENSION = 0x196;
    DEVICE_SETTINGS = 0x197;
    MAP_VIEW = 0x1f5;
    MAP_VIEW_LOCATION = 0x1f6;
    TRANSIT = 0x1f7;
    MAP_SETTINGS = 0x1f8;
    MAP_UI = 0x1f9;
    MAP_UI_SHOWN = 0x1fa;
    USER_SESSION = 0x259;
    EXPERIMENTS = 0x25a;
    PLACE_CARD = 0x2be;
    ROUTE = 0x2bf;
    FLYOVER = 0x2c0;
    MAPS_SERVER = 0x2c1;
    TILE_SET = 0x2c2;
    PLACE_REQUEST = 0x2c3;
    NAVIGATION = 0x2c4;
    MAP_RESTORE = 0x2c5;
    SUGGESTIONS = 0x2c6;
    REPORT_AN_ISSUE = 0x2c7;
    REALTIME_TRAFFIC = 0x2c8;
    OFFLINE = 0x2c9;
    SUMMARY_LOOK_AROUND_LOG = 0x2ca;
    DETAIL_LOOK_AROUND_LOG = 0x2cb;
    LOOK_AROUND_VIEW = 0x2cc;
    MUNIN_RESOURCE_LOG = 0x2cd;
    MAPS_LAUNCH = 0x2ce;
    CURATED_COLLECTION = 0x2cf;
    UGC_PHOTO = 0x2d0;
    DIRECTIONS_DETAIL = 0x2d1;
    MARKET = 0x2d2;
    ROUTING_SETTINGS = 0x2d3;
    MAPS_FEATURES = 0x2d4;
    MAPS_USER_SETTINGS = 0x2d5;
  }
  StateType stateType = 99;
}

message LogMsgEvent {
  enum EventType {
    LOG_MSG_EVENT_TYPE_UNKNOWN = 0;
    USER_ACTION = 1;
    STATE_TIMING = 2;
    TILE_SET_STATE = 4;
    PLACE_DATA_CACHE = 5;
    NETWORK = 6;
    CACHE_HIT = 7;
    DIRECTIONS = 8;
    TRANSIT_APP_LAUNCH = 9;
    TIME_TO_LEAVE_HYPOTHESIS = 10;
    TIME_TO_LEAVE_INITIAL_TRAVEL_TIME = 0xb;
    LOG_FRAMEWORK = 0xc;
    MAPS_WIDGETS_SESSION = 0xd;
    LIST_INTERACTION_SESSION = 0xe;
    REFINE_SEARCH_SESSION = 0xf;
    PROACTIVE_SUGGESTION_SESSION = 0x10;
    MAP_LAUNCH = 0x11;
    RIDE_BOOKING_SESSION = 0x12;
    RIDE_BOOKED_SESSION = 0x13;
    TABLE_BOOKING_SESSION = 0x14;
    TABLE_BOOKED_SESSION = 0x15;
    STALE_RESOURCE = 0x16;
    FULL_NAV_TRACE = 0x17;
    TELEMETRIC = 0x18;
    CLIENT_AC_SUGGESTIONS = 0x19;
    REALTIME_TRAFFIC_PROBE_COLLECTION = 0x1a;
    BATCH_TRAFFIC_PROBE_COLLECTION = 0x1b;
    OFFLINE_REQUEST_RESPONSE = 0x1c;
    COMMUTE_WINDOW = 0x1d;
    GENERIC_APP_ERROR = 0x1e;
    WIFI_CONNECTION_QUALITY_PROBE = 0x1f;
    PARKED_CAR = 0x20;
    TILE_CACHE_ANALYTIC = 0x21;
    GRID_DURATION = 0x22;
    DISPLAY_ANALYTIC = 0x23;
    THROTTLE = 0x24;
    MAP_KIT_COUNTS = 0x25;
    PRED_EX_TRAINING = 0x26;
    MARCOLITE_USAGE = 0x27;
    TRIP_DEPARTURE = 0x28;
    DIRECTIONS_REQUEST_DETAILS = 0x29;
    EV_ROUTING_VEHICLE_DETAILS = 0x2a;
    EV_TRIP = 0x2b;
    CURATED_COLLECTION_STATS = 0x2c;
    CURATED_COLLECTION_USAGE = 0x2d;
    MAPS_DEVICE_SETTINGS = 0x2e;
    HARD_STOP = 0x2f;
    VLF_USAGE = 0x30;
  }

  repeated LogMsgState logMsgState = 1;
  LogMsgEventId analyticTag = 2;
  EventType eventType = 100;

  LogMsgEventUserAction userActionEvent = 0x65;
  LogMsgEventStateTiming stateTimingEvent = 0x66;
  LogMsgEventTileSetState tileSetStateEvent = 0x68;
  LogMsgEventPlaceDataCache placeDataCacheEvent = 0x69;
  LogMsgEventNetwork networkEvent = 0x6a;
  LogMsgEventDirections directionsEvent = 0x6c;
  LogMsgEventTransitAppLaunch transitAppLaunchEvent = 0x6d;
  LogMsgEventTimeToLeaveHypothesis timeToLeaveHypothesisEvent = 0x6e;
  LogMsgEventTimeToLeaveInitialTravelTime timeToLeaveInitialTravelTimeEvent =
      0x6f;
  LogMsgEventLogFramework logFrameworkEvent = 0x70;
  LogMsgEventMapsWidgetsInteractionSession mapsWidgetsInteractionSession = 0x71;
  LogMsgEventListInteractionSession listInteractionSession = 0x72;
  LogMsgEventRefineSearchSession refineSearchSession = 0x73;
  LogMsgEventProactiveSuggestionInteractionSession
      proactiveSuggestionInteractionSessionEvent = 0x74;
  LogMsgEventMapLaunch mapLaunchEvent = 0x75;
  LogMsgEventRideBookingSession rideBookingSession = 0x76;
  LogMsgEventRideBookedSession rideBookedSession = 0x77;
  LogMsgEventTableBookingSession tableBookingSession = 0x78;
  LogMsgEventTableBookedSession tableBookedSession = 0x79;
  LogMsgEventFullNavTrace fullNavTrace = 0x7b;
  LogMsgEventTelemetric telemetric = 0x7c;
  LogMsgEventClientACSuggestions clientAcSuggestions = 0x7d;
  LogMsgEventRealtimeTrafficProbe realtimeTrafficProbeCollection = 0x7e;
  LogMsgEventBatchTrafficProbe batchTrafficProbeCollection = 0x7f;
  LogMsgEventCommuteWindow commuteWindow = 0x81;
  LogMsgEventGenericAppError genericAppErrorEvent = 0x82;
  LogMsgEventWifiConnectionQualityProbe wifiConnectionQualityProbeEvent = 0x83;
  LogMsgEventParkedCar parkedCar = 0x84;
  LogMsgEventTileCacheAnalytic tileCacheAnalytic = 0x85;
  LogMsgEventGridDuration gridDuration = 0x86;
  LogMsgEventDisplayAnalytic displayAnalytic = 0x87;
  LogMsgEventThrottle throttleEvent = 0x88;
  LogMsgEventMapKitCounts mapKitCounts = 0x89;
  LogMsgEventPredExTrainingData predExTrainingData = 0x8a;
  LogMsgEventMarcoLiteUsage marcoLiteUsage = 0x8b;
  LogMsgEventTripDepartureFeedback tripDepartureFeedback = 0x8c;
  LogMsgEventDirectionsRequestDetails directionsRequestDetails = 0x8d;
  LogMsgEventEVRoutingVehicleDetails evRoutingVehicleDetails = 0x8e;
  LogMsgEventEVTrip evTrip = 0x8f;
  LogMsgEventCuratedCollectionStats curatedCollectionStats = 0x90;
  LogMsgEventCuratedCollectionUsage curatedCollectionUsage = 0x91;
  LogMsgEventMapsDeviceSettings mapsDeviceSettings = 0x92;
  LogMsgEventHardStop hardStop = 0x93;
  LogMsgEventVLFUsage vlfUsage = 0x94;
}

message LogMessage {
  enum LogMessageType {
    LOG_MESSAGE_TYPE_UNKNOWN = 0;
    DEBUGLOG = 1;
    CURATED_COLLECTION_SESSION = 2;
    USAGE = 10000;
    SHORT_SESSION_USAGE = 11000;
    LONG_SESSION_USAGE = 12000;
    THIRTY_DAY_COUNTS_USAGE = 12001;
    SESSIONLESS_USAGE = 13000;
    LONG_SESSION_LOG_FRAMEWORK_USAGE = 14000;
    COHORTS_SESSION_USAGE = 15000;
    PERFORMANCE = 20000;
    NAVIGATION_TRACE = 30000;
    TELEMETRY = 40000;
    REALTIME_TRAFFIC_PROBE = 50000;
    BATCH_TRAFFIC_PROBE = 50001;
    WIFI_CONNECTION_QUALITY_PROBE_COLLECTION = 50002;
  }

  uint32 groupRetryCount = 2000;
  LogMessageType logMessageType = 1000;
  repeated LogMsgEvent logMsgEvent = 0x66;
}
message LogMessageCollectionRequest { repeated LogMessage logMessage = 1; }
