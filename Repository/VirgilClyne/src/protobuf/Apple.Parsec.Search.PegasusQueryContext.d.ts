// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_number,keep_enum_prefix,output_javascript
// @generated from protobuf file "apple.parsec.search.PegasusQueryContext.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message PegasusQueryContext
 */
export interface PegasusQueryContext {
    /**
     * @generated from protobuf field: string secretKey = 1;
     */
    secretKey: string;
    /**
     * @generated from protobuf field: string countryCode = 2;
     */
    countryCode: string;
    /**
     * @generated from protobuf field: string locale = 3;
     */
    locale: string;
    /**
     * @generated from protobuf field: string effectiveSystemLanguage = 4;
     */
    effectiveSystemLanguage: string;
    /**
     * @generated from protobuf field: repeated string preferredLanguages = 5;
     */
    preferredLanguages: string[];
    /**
     * @generated from protobuf field: string storeFront = 6;
     */
    storeFront: string;
    /**
     * userGuid = 7;
     *
     * @generated from protobuf field: string timeZone = 8;
     */
    timeZone: string;
    /**
     * @generated from protobuf field: optional string skuRegion = 9;
     */
    skuRegion?: string;
    /**
     * calendar = 10;
     *
     * @generated from protobuf field: TemperatureUnit temperatureUnit = 11;
     */
    temperatureUnit: TemperatureUnit;
    /**
     * @generated from protobuf field: MeasurementSystem measurementSystem = 12;
     */
    measurementSystem: MeasurementSystem;
    /**
     * @generated from protobuf field: HourFormat hourFormat = 13;
     */
    hourFormat: HourFormat;
    /**
     * @generated from protobuf field: Location location = 14;
     */
    location?: Location;
    /**
     * mapsSession = 15;
     * subscriptions = 16;
     * transportationMode = 17;
     *
     * @generated from protobuf field: optional string installedAppsSignature = 18;
     */
    installedAppsSignature?: string;
    /**
     * @generated from protobuf field: optional float uiScale = 19;
     */
    uiScale?: number;
    /**
     * internalBuild = 20; //?
     *
     * @generated from protobuf field: optional int32 seedBuild = 21;
     */
    seedBuild?: number;
    /**
     * @generated from protobuf field: bool hsEnabled = 22;
     */
    hsEnabled: boolean;
    /**
     * bool managedDevice = 23; //?
     * string abTestSeed = 24; //?
     * string siriLocale = 25; //?
     *
     * @generated from protobuf field: optional string region = 26;
     */
    region?: string;
    /**
     * string sil = 27; //?
     *
     * @generated from protobuf field: optional string trialIdentifiers = 28;
     */
    trialIdentifiers?: string;
}
/**
 * @generated from protobuf message Location
 */
export interface Location {
    /**
     * @generated from protobuf field: optional float latitude = 1;
     */
    latitude?: number;
    /**
     * @generated from protobuf field: optional float longitude = 2;
     */
    longitude?: number;
    /**
     * @generated from protobuf field: optional Source source = 3;
     */
    source?: Source;
    /**
     * @generated from protobuf field: optional float horizontalAccuracy = 4;
     */
    horizontalAccuracy?: number;
}
/**
 * @generated from protobuf enum TemperatureUnit
 */
export declare enum TemperatureUnit {
    /**
     * @generated from protobuf enum value: TemperatureUnitUnknown = 0;
     */
    TemperatureUnitUnknown = 0,
    /**
     * celsius
     *
     * @generated from protobuf enum value: TemperatureUnitCelsius = 1;
     */
    TemperatureUnitCelsius = 1,
    /**
     * fahrenheit
     *
     * @generated from protobuf enum value: TemperatureUnitFahrenheit = 2;
     */
    TemperatureUnitFahrenheit = 2
}
/**
 * @generated from protobuf enum MeasurementSystem
 */
export declare enum MeasurementSystem {
    /**
     * @generated from protobuf enum value: MeasurementSystemUnknown = 0;
     */
    MeasurementSystemUnknown = 0,
    /**
     * @generated from protobuf enum value: MeasurementSystemSI = 1;
     */
    MeasurementSystemSI = 1,
    /**
     * @generated from protobuf enum value: MeasurementSystemUS = 2;
     */
    MeasurementSystemUS = 2,
    /**
     * @generated from protobuf enum value: MeasurementSystemUK = 3;
     */
    MeasurementSystemUK = 3
}
/**
 * @generated from protobuf enum HourFormat
 */
export declare enum HourFormat {
    /**
     * @generated from protobuf enum value: HourFormatUnknown = 0;
     */
    HourFormatUnknown = 0,
    /**
     * twelve
     *
     * @generated from protobuf enum value: HourFormatTwelve = 1;
     */
    HourFormatTwelve = 1,
    /**
     * twentyFour
     *
     * @generated from protobuf enum value: HourFormatTwentyFour = 2;
     */
    HourFormatTwentyFour = 2
}
/**
 * @generated from protobuf enum Source
 */
export declare enum Source {
    /**
     * @generated from protobuf enum value: SourceUnknown = 0;
     */
    SourceUnknown = 0,
    /**
     * disabledByUser
     *
     * @generated from protobuf enum value: SourceDisabledByUser = 1;
     */
    SourceDisabledByUser = 1,
    /**
     * disabledByBag
     *
     * @generated from protobuf enum value: SourceDisabledByBag = 2;
     */
    SourceDisabledByBag = 2,
    /**
     * tooSlow
     *
     * @generated from protobuf enum value: SourceTooSlow = 3;
     */
    SourceTooSlow = 3,
    /**
     * @generated from protobuf enum value: SourceError = 4;
     */
    SourceError = 4,
    /**
     * @generated from protobuf enum value: SourceGPS = 5;
     */
    SourceGPS = 5,
    /**
     * cellular
     *
     * @generated from protobuf enum value: SourceCellular = 6;
     */
    SourceCellular = 6,
    /**
     * wiFi
     *
     * @generated from protobuf enum value: SourceWiFi = 7;
     */
    SourceWiFi = 7
}
declare class PegasusQueryContext$Type extends MessageType<PegasusQueryContext> {
    constructor();
}
/**
 * @generated MessageType for protobuf message PegasusQueryContext
 */
export declare const PegasusQueryContext: PegasusQueryContext$Type;
declare class Location$Type extends MessageType<Location> {
    constructor();
}
/**
 * @generated MessageType for protobuf message Location
 */
export declare const Location: Location$Type;
export {};
